name: "Get & Cache Dependencies"
description: "Get the dependencies (via npm) and cache them"
inputs:
  caching:
    description: "Whether to cache dependencies or not"
    required: false
    default: "true"
outputs:
  used-cache:
    description: "Whether the cache was used"
    value: ${{ steps.install.outputs.cache }}
runs:
  using: "composite"
  steps:
    - name: Cache dependencies
      id: cache
      if: inputs.caching == 'true'
      uses: actions/cache@v3
      with:
        path: node_modules
        # Everytime the package-lock.json changes, we cache dependencies again
        # The cache is used the second time we run the job "npm ci"
        key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # By default, npm creates a cache of dependencies in the .npm folder
    - name: Install dependencies
      id: install
      if: steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true'
      run: |
        npm ci
        echo "cache='${{ inputs.caching }}' >> $GITHUB_OUTPUT"
      shell: bash
